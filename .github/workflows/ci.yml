name: Build and Publish Docker image
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
      continue: ${{ steps.generate-matrix.outputs.continue }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: generate matrix
        id: generate-matrix
        run: |
          bash generate_matrix.sh
  docker:
    if: needs.metadata.outputs.continue == 'yes'
    needs: metadata
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.metadata.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_ACCESS_TOKEN }}
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v2.4.0
        with:
          images: ghcr.io/frezbo/${{ matrix.project }}
          tag-latest: false
          tag-custom: |
            ${{ matrix.version }}
          tag-custom-only: true
          label-custom: |
            org.opencontainers.image.version=${{ matrix.version }}
      # blocked due to https://github.com/docker/buildx/issues/59
      # - name: Build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ${{ matrix.project }}
      #     file: ${{ matrix.dockerfile }}
      #     platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
      #     push: false
      #     # load: true
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
      #     tags: ${{ steps.docker_meta.outputs.tags }}
      #     labels: |
      #       ${{ steps.docker_meta.outputs.labels }}
      - name: build
        run: |
          docker buildx build --load --build-arg VERSION=${{ matrix.version }} -t ghcr.io/frezbo/${{ matrix.project }}:${{ matrix.version }} ${{ matrix.project }}
      - name: test
        run: |
          set -eu -o pipefail
          if [[ -e ${{ matrix.project }}/test.sh ]]; then
            bash ${{ matrix.project }}/test.sh ${{ matrix.project }} ${{ matrix.version }}
          fi
      - name: push
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.project }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
          build-args: |
            VERSION=${{ matrix.version }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
